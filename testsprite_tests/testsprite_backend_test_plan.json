[
  {
    "id": "TC001",
    "title": "verify jwt token authentication",
    "description": "Test the /api/auth/verify endpoint to ensure it correctly validates JWT tokens issued by NextAuth and returns the appropriate user information upon successful verification."
  },
  {
    "id": "TC002",
    "title": "get current authenticated user information",
    "description": "Test the /api/auth/me endpoint to retrieve the current authenticated user's information, verifying that the endpoint requires valid JWT authentication and returns accurate user details."
  },
  {
    "id": "TC003",
    "title": "retrieve pension data with filtering and pagination",
    "description": "Test the GET /api/pension-data endpoint to ensure it supports comprehensive filtering by fields such as country, pensionType, minAge, maxAge, and search, along with pagination parameters page and limit."
  },
  {
    "id": "TC004",
    "title": "create new pension data record with validation",
    "description": "Test the POST /api/pension-data endpoint to create a new pension data record, verifying that all required fields are validated and data is persisted correctly in the database."
  },
  {
    "id": "TC005",
    "title": "get pension data by id",
    "description": "Test the GET /api/pension-data/{id} endpoint to retrieve pension data by its unique identifier, ensuring proper handling of valid and invalid IDs."
  },
  {
    "id": "TC006",
    "title": "update pension data record",
    "description": "Test the PUT /api/pension-data/{id} endpoint to update an existing pension data record, verifying that changes are saved and validation rules are enforced."
  },
  {
    "id": "TC007",
    "title": "delete pension data record",
    "description": "Test the DELETE /api/pension-data/{id} endpoint to remove a pension data record, ensuring proper authorization and data removal."
  },
  {
    "id": "TC008",
    "title": "send message to ai chatbot",
    "description": "Test the POST /api/chatbot/message endpoint to send a user message to the AI-powered chatbot and verify that it returns a context-aware, AI-enhanced pension guidance response or a fallback structured response."
  },
  {
    "id": "TC009",
    "title": "calculate projected retirement age",
    "description": "Test the POST /api/kpi/retirement-age endpoint to calculate the projected retirement age based on user inputs such as target corpus and contribution details, verifying accuracy of the calculation."
  },
  {
    "id": "TC010",
    "title": "retrieve audit log files list",
    "description": "Test the GET /api/logs/files endpoint to retrieve the list of available audit log files, ensuring that only authorized users can access this information."
  }
]
